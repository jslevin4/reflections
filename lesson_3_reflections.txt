When would you want to use a remote repository rather than keeping all your work local?

Use a remote repository to be able to more easily collaborate and share projects with 
others and view and edit your repository online.

Why might you want to always pull changes manually rather than having Git automatically stay up-to-date with your remote repository?

Pulling changes manually allows you to choose when you want to update your local
repository based on the remote.  Maybe other people are contributing to the remote
repository, and you want to wait to bring their changes into your local repo.

Describe the differences between forks, clones, and branches. When would you use one instead of another?

A fork is a copy on github of another repository (maybe another user's repository) that contains
the reference to the repository it was forked from.  It allows you to make changes to a repository
that you may not have permission to modify, and clone the fork that you made.

A clone is a copy of a remote repository that exists as a local repository (or on your local machine). It
allows you to change things.  If you have permission, you can push changes you make locally to the
remote repository.  You may not be able to do this though.

A branch is a name that refers to a commit or commit history.  When a new commit is added to the current
branch, the branch moves to "point" to that latest commit, the tip of the branch.  Projects may have a
master branch.  Branches other than the master branch are histories of commits that diverge from the
master branch, and allow you to experiment with big changes to a repository (or program).

What is the benefit of having a copy of the last known state of the remote stored locally?

With the last known state of the remote repository stored locally, you can see how your local
repository has changed compared to this state.  You can also work offline, without checking the
current state of the remote repository.  At some point, you will have to check with the remote
repository to see how it has changed from the last known state stored in your repository, and see
if there are any conflicts with the current state of your repository which must be resolved.

How would you collaborate without using Git or GitHub? What would be easier, and what would be harder?

Without using Git or GitHub, I might use another source control system like Subversion, and email
or meet with my collaborators to discuss changes.  We might pass files around.  It might be 
technically easier to avoid using Git commands, but it wouldn't be as systematic, and the
history of changes wouldn't be as complete.  The online interface of collaborating with GitHub 
would be missing.
Using Git and Github, the workflow seems to be: create a branch, make changes, and commit them.
Push your new, modified branch to the "fork", or the GitHub repository.  Submit a pull request, to
request someone review your changes and approve merging it into the master branch.
